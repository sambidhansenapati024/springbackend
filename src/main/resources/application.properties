 spring.application.name=angularspringbackendreview

  server.port=2628

#  spring.datasource.url=jdbc:mysql://localhost:3306/springdb 
#  spring.datasource.username=root
#  spring.datasource.password=SAMBIDHAN@26P

#  spring.jpa.show-sql=true
#  spring.jpa.hibernate.ddl-auto=update

#  spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/newRealm
#  spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/newRealm/protocol/openid-connect/certs

#  jwt.auth.converter.resource-id=26272003
#  jwt.auth.converter.principal-attribute=principal_username

 logging.level.org.springframework.security=DEBUG

#  oauth.token-url=http://localhost:8080/realms/newRealm/protocol/openid-connect/token
#  oauth.client-id=26272003
#  oauth.client-secret=TaGCEpLLDzAovwPu9gN7wB8LGWiU62t1
#  oauth.grant-type=password

# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWK_URI}
oauth.token-url=${KEYCLOAK_TOKEN_URL}
oauth.client-id=${OAUTH_CLIENT_ID}
oauth.client-secret=${OAUTH_CLIENT_SECRET}
oauth.grant-type=${OAUTH_GRANT_TYPE}
